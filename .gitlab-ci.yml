# retry in case the runner has a failure
default:
  retry:
    max: 2
    when:
      - runner_system_failure
      - scheduler_failure
      - runner_unsupported
      - archived_failure
      - unmet_prerequisites

cache:
  key:
    files:
      - package-lock.json
  paths:
    - .npm/

.install_cached_node_modules: &install_cached_node_modules
  - echo "found $(find .npm | wc -l || true) cached modules"
  - npm ci --cache .npm --prefer-offline
  - echo "has $(find .npm | wc -l || true) modules after install"

stages:
  - test
  - build
  - deploy

lint:
  image: registry.reset.inso-w.at/pub/docker/node16
  stage: test
  before_script:
    - *install_cached_node_modules
  script:
    - npm run lint
    - npm run prettier

test:
  image: registry.reset.inso-w.at/pub/docker/selenium-chromium:latest
  stage: test
  before_script:
    - *install_cached_node_modules
  script:
    - npm run test:ci:unit
  coverage: /Lines.*?(\d+(?:\.\d+)?)%/

test-e2e:
  image: registry.reset.inso-w.at/pub/docker/cypress:latest
  stage: test
  before_script:
    - *install_cached_node_modules
  script:
    - npx cypress verify # circumvent verification timeout. see https://stackoverflow.com/q/63667880/6548154
    - npm run test:ci:e2e
  artifacts:
    # failure debugging artifacts
    when: on_failure
    expose_as: 'Cypress Artifacts'
    paths:
      - cypress/screenshots
      - cypress/videos
    expire_in: 1 day

build:
  # based on: https://docs.gitlab.com/ee/ci/docker/using_kaniko.html
  stage: build
  cache: [] # disable cache as this doesn't use npm
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:${CI_PIPELINE_ID}"
      --verbosity=debug
  only:
    - development

deploy:
  stage: deploy
  cache: [] # disable cache as this doesn't use npm
  image: registry.reset.inso-w.at/pub/docker/kubectl
  script:
    - sed -i 's/:latest/:'$CI_PIPELINE_ID'/g' kubernetes.yaml
    - cat kubernetes.yaml
    - kubectl apply -f kubernetes.yaml
  only:
    - development
